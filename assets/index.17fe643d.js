(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function e(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerpolicy&&(r.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?r.credentials="include":s.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(s){if(s.ep)return;s.ep=!0;const r=e(s);fetch(s.href,r)}})();class F{nextDouble(){return Math.random()}}class Y{constructor(){this.graphHeight=500,this.graphWidth=500,this.random=new F,this.focusedNode=null}setDimensions(t,e){this.graphWidth=t,this.graphHeight=e}setFocusedNode(t){this.focusedNode=t}}const G=1e3,J=.5,X=.4,q=.15,U=.15,O=15,x=1e-4,b=25;class c{constructor(t,e){this.x=t,this.y=e}add(t){return new c(this.x+t.x,this.y+t.y)}subtract(t){return new c(this.x-t.x,this.y-t.y)}divide(t){return new c(this.x/t,this.y/t)}get distance(){return Math.sqrt(this.x*this.x+this.y*this.y)}limit(t){const e=this.distance;return e>t?this.divide(e).multiply(t):this}multiply(t){return new c(this.x*t,this.y*t)}normalize(){return this.divide(this.distance)}rotate(t){const e=Math.cos(t),i=Math.sin(t);return new c(this.x*e-this.y*i,this.x*i+this.y*e)}}c.zero=new c(0,0);class d{constructor(t,e,i,s){this.x=t,this.y=e,this.width=i,this.height=s}static fromLTRB(t,e,i,s){return new d(t,e,i-t,s-e)}static fromSize(t){return new d(0,0,t.width,t.height)}static fromPoints(t,e){return d.fromLTRB(Math.min(t.x,e.x),Math.min(t.y,e.y),Math.max(t.x,e.x),Math.max(t.y,e.y))}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get size(){return{width:this.width,height:this.height}}moveTo(t,e){return new d(t,e,this.width,this.height)}translate(t,e){return this.moveTo(this.x+t,this.y+e)}get center(){return new c(this.x+this.width/2,this.y+this.height/2)}}d.zero=new d(0,0,0,0);class K{constructor(){this.nodes=[],this.rect=d.zero}getNodes(){return this.nodes}getRect(){return this.rect}setRect(t){this.rect=t}add(t){this.nodes.push(t),this.nodes.length===1?this.rect=d.fromLTRB(t.x,t.y,t.x+t.width,t.y+t.height):this.rect=d.fromLTRB(Math.min(this.rect.left,t.x),Math.min(this.rect.top,t.y),Math.max(this.rect.right,t.x+t.width),Math.max(this.rect.bottom,t.y+t.height))}contains(t){return this.nodes.indexOf(t)!==-1}size(){return this.nodes.length}concat(t){t.nodes.forEach(e=>{e.position=new c(this.rect.right+O,this.rect.top),this.add(e)})}offset(t,e){this.nodes.forEach(i=>{i.position=i.position.add(new c(t,e))}),this.rect=this.rect.translate(t,e)}}class Z extends Y{constructor(){super(...arguments),this.displacement=new Map,this.tick=0,this.iterations=G,this.repulsionRate=J,this.attractionRate=q,this.repulsionPercentage=X,this.attractionPercentage=U}setProperties(t){t!=null&&t.iterations&&(this.iterations=t.iterations),t!=null&&t.repulsionRate&&(this.repulsionRate=t.repulsionRate),t!=null&&t.attractionRate&&(this.attractionRate=t.attractionRate),t!=null&&t.repulsionPercentage&&(this.repulsionPercentage=t.repulsionPercentage),t!=null&&t.attractionPercentage&&(this.attractionPercentage=t.attractionPercentage)}init(t){t.nodes.forEach(e=>{this.displacement.set(e,c.zero);const i=this.random.nextDouble()*this.graphWidth,s=this.random.nextDouble()*this.graphHeight;e.position=new c(i,s)})}copyPositions(t){t.nodes.forEach(e=>{this.displacement.set(e,e.position)})}step(t){this.displacement.clear(),t.nodes.forEach(e=>{this.displacement.set(e,c.zero)}),this.calculateRepulsion(t.nodes),this.calculateAttraction(t.edges),this.moveNodes(t)}moveNodes(t){t.nodes.forEach(e=>{const i=e.position.add(this.displacement.get(e)),s=Math.min(this.graphWidth-40,Math.max(0,i.x)),r=Math.min(this.graphHeight-40,Math.max(0,i.y));e.position=new c(s,r)})}cool(t){this.tick*=1-t/this.iterations}limitMaximumDisplacement(t){t.forEach(e=>{if(e!==this.focusedNode){debugger;const i=this.displacement.get(e),s=i.distance,r=Math.max(x,s),n=r*Math.min(r,this.tick),a=i.divide(n);e.position=e.position.add(a)}else this.displacement.set(e,c.zero)})}calculateAttraction(t){t.forEach(e=>{const i=e.source,s=e.destination,r=i.position.subtract(s.position),n=Math.max(x,r.distance),a=Math.min(this.graphWidth*this.attractionPercentage,this.graphHeight*this.attractionPercentage),h=Math.min(0,Math.abs(a-n)/(a*2)),m=r.multiply(h*this.attractionRate);this.displacement.set(i,this.displacement.get(i).subtract(m)),this.displacement.set(s,this.displacement.get(s).add(m))})}calculateRepulsion(t){t.forEach(e=>{t.forEach(i=>{if(e!==i){const s=e.position.subtract(i.position),r=Math.max(x,s.distance),n=Math.min(this.graphWidth*this.repulsionPercentage,this.graphHeight*this.repulsionPercentage),a=Math.max(0,n-r)/n,h=s.multiply(a*this.repulsionRate);this.displacement.set(e,this.displacement.get(e).add(h))}}),t.forEach(i=>{this.displacement.set(i,this.displacement.get(i).divide(t.length))})})}layout(t){const e=this.findBiggestSize(t)*t.nodes.length;this.graphWidth=e,this.graphHeight=e}run(t,e,i){this.layout(t);const s=t.nodes,r=t.edges;this.tick=.1*Math.sqrt(this.graphWidth/2*this.graphHeight/2),this.init(t);for(let n=0;n<this.iterations&&(this.calculateRepulsion(s),this.calculateAttraction(r),this.limitMaximumDisplacement(s),this.cool(n),!this.done());n++);return this.focusedNode===null&&this.positionNodes(t),this.shiftCoordinates(t,e,i),this.calculateGraphSize(t)}shiftCoordinates(t,e,i){t.nodes.forEach(s=>{s.position=s.position.add(new c(e,i))})}positionNodes(t){const e=this.getOffset(t),i=e.x,s=e.y,r=[],n=[];t.nodes.forEach(a=>{a.position=a.position.subtract(new c(i,s))}),t.nodes.forEach(a=>{if(!r.includes(a)){r.push(a);let h=this.findClusterOf(n,a);h===null&&(h=new K,h.add(a),n.push(h)),this.followEdges(t,h,a,r)}}),this.positionCluster(n)}positionCluster(t){this.combineSingleNodeCluster(t);let e=t[0];e.offset(-e.rect.left,-e.rect.top);for(let i=1;i<t.length;i++){const s=t[i],r=s.rect.left-e.rect.right-O,n=s.rect.top-e.rect.top;s.offset(-r,-n),e=s}}combineSingleNodeCluster(t){let e=null;t.forEach(i=>{i.size()===1&&(e===null?e=i:e.concat(i))}),t.forEach(i=>{i.size()===1&&t.splice(t.indexOf(i),1)})}followEdges(t,e,i,s){t.successorsOf(i).forEach(r=>{s.includes(r)||(s.push(r),e.add(r),this.followEdges(t,e,r,s))}),t.predecessorsOf(i).forEach(r=>{s.includes(r)||(s.push(r),e.add(r),this.followEdges(t,e,r,s))})}findClusterOf(t,e){for(const i of t)if(i.contains(e))return i;return null}findBiggestSize(t){return t.nodes.map(e=>Math.max(e.height,e.width)).reduce((e,i)=>Math.max(e,i),0)}getOffset(t){let e=1/0,i=1/0;return t.nodes.forEach(s=>{e=Math.min(e,s.position.x),i=Math.min(i,s.position.y)}),new c(e,i)}done(){return this.tick<1/Math.max(this.graphWidth,this.graphHeight)}calculateGraphSize(t){let e=1/0,i=1/0,s=-1/0,r=-1/0;return t.nodes.forEach(n=>{e=Math.min(e,n.position.x),i=Math.min(i,n.position.y),s=Math.max(s,n.position.x+n.width),r=Math.max(r,n.position.y+n.height)}),{width:s-e,height:r-i}}}class E{constructor(t,e){this.source=t,this.destination=e}static fromJson(t,e){const i=t.find(n=>n.id===e.source),s=t.find(n=>n.id===e.destination),r=new E(i,s);return e.data&&(r.data=e.data),r}}class v{constructor(t){this.rect=new d(0,0,b,b),this.id=t}static fromJson(t){var e,i,s,r;const n=new v(t.id);t.data&&(n.data=t.data);const a=new c((e=t.x)!==null&&e!==void 0?e:0,(i=t.y)!==null&&i!==void 0?i:0),h={width:(s=t.width)!==null&&s!==void 0?s:b,height:(r=t.height)!==null&&r!==void 0?r:b};return n.rect=new d(a.x,a.y,h.width,h.height),n}get x(){return this.position.x}get y(){return this.position.y}get position(){return new c(this.rect.x,this.rect.y)}set position(t){this.rect=new d(t.x,t.y,this.rect.width,this.rect.height)}get width(){return this.rect.width}get height(){return this.rect.height}}class M{constructor(t,e){this.nodes=t,this.edges=e}static fromJson(t){const e=t.nodes.map(v.fromJson),i=t.edges.map(s=>E.fromJson(e,s));return new M(e,i)}toJson(){return{nodes:this.nodes.map(t=>({id:t.id})),edges:this.edges.map(t=>({source:t.source.id,destination:t.destination.id}))}}successorsOf(t){return this.getOutEdges(t).map(e=>e.destination)}getOutEdges(t){return this.edges.filter(e=>e.source===t)}predecessorsOf(t){return this.getInEdges(t).map(e=>e.source)}getInEdges(t){return this.edges.filter(e=>e.destination===t)}getEdgeBetween(t,e){return this.edges.find(i=>i.source===t&&i.destination===e)}hasNodes(){return this.nodes.length>0}}function Q(o){const t={nodes:[],edges:[]};for(let e=0;e<o;e++){const[i,s,r]=[Math.random(),Math.random(),Math.random()].map(h=>Math.floor(h*255)),n=`#${i.toString(16)}${s.toString(16)}${r.toString(16)}`,a=i*.299+s*.587+r*.114>186?"#000":"#fff";t.nodes.push({id:`${e}`,data:{name:`Node ${e}`,backgroundColor:n,color:a}})}for(let e=0;e<o;e++)for(let i=0;i<o;i++)e!==i&&t.edges.push({source:`${e}`,destination:`${i}`});return t}const f=M.fromJson(Q(20)),u=new Z;var R;const $=(R=document.getElementById("output"))!=null?R:document.body,k=$.getBoundingClientRect(),y="black";u.setDimensions(k.width,k.height);u.init(f);const p=document.createElementNS("http://www.w3.org/2000/svg","svg");p.setAttribute("width",u.graphWidth.toString());p.setAttribute("height",u.graphHeight.toString());p.setAttribute("viewBox",`0 0 ${u.graphWidth} ${u.graphHeight}`);p.setAttribute("preserveAspectRatio","xMidYMid meet");p.setAttribute("style","overflow: visible");const w=document.createElementNS("http://www.w3.org/2000/svg","defs");p.appendChild(w);const l=document.createElementNS("http://www.w3.org/2000/svg","marker");l.setAttribute("id","arrowstart");l.setAttribute("viewBox","0 0 13 10");l.setAttribute("refX","2");l.setAttribute("refY","5");l.setAttribute("markerWidth","3.5");l.setAttribute("markerHeight","3.5");l.setAttribute("orient","auto");l.setAttribute("fill","grey");const z=document.createElementNS("http://www.w3.org/2000/svg","path");z.setAttribute("d","M 13 0  C 13 0, 10 5, 13 10   L 13 10  L 0 5");l.appendChild(z);w.appendChild(l);const S=l.cloneNode(!0);S.setAttribute("id","arrowstartactive");S.setAttribute("fill",y);w.appendChild(S);const g=document.createElementNS("http://www.w3.org/2000/svg","marker");g.setAttribute("id","arrowend");g.setAttribute("viewBox","0 0 13 10");g.setAttribute("refX","11");g.setAttribute("refY","5");g.setAttribute("markerWidth","3.5");g.setAttribute("markerHeight","3.5");g.setAttribute("orient","auto");g.setAttribute("fill","grey");const H=document.createElementNS("http://www.w3.org/2000/svg","path");H.setAttribute("d","M 0 0  C 0 0, 3 5, 0 10   L 0 10  L 13 5");g.appendChild(H);w.appendChild(g);const N=g.cloneNode(!0);N.setAttribute("id","arrowendactive");N.setAttribute("fill",y);w.appendChild(N);let C=[];var L;for(const o of f.edges){if(C.some(n=>{const a=n.source.id===o.source.id,h=n.destination.id===o.destination.id;if(a&&h)return!0;const m=n.source.id===o.destination.id,B=n.destination.id===o.source.id;return!!(m&&B)}))continue;const e=f.edges.find(n=>n.source===o.destination&&n.destination===o.source),i=document.createElementNS("http://www.w3.org/2000/svg","line");i.setAttribute("data-source",o.source.id),i.setAttribute("data-destination",o.destination.id);const{start:s,end:r}=W(o);if(i.setAttribute("x1",s.x.toString()),i.setAttribute("y1",s.y.toString()),i.setAttribute("x2",r.x.toString()),i.setAttribute("y2",r.y.toString()),i.setAttribute("fill","lightgray"),i.setAttribute("stroke","lightgray"),i.setAttribute("stroke-width","2"),i.setAttribute("marker-end","url(#arrowend)"),e&&(i.setAttribute("marker-start","url(#arrowstart)"),i.setAttribute("data-reverse","true"),C.push(o)),p.appendChild(i),(L=o.data)!=null&&L.name){const n=document.createElementNS("http://www.w3.org/2000/svg","title");n.textContent=o.data.name,i.appendChild(n)}}var D,I,T;for(const o of f.nodes){const t=document.createElementNS("http://www.w3.org/2000/svg","g");t.setAttribute("data-id",o.id),t.setAttribute("transform",`translate(${o.x}, ${o.y})`);const e=(D=o.data)==null?void 0:D.backgroundColor,i=(I=o.data)==null?void 0:I.color,s=document.createElementNS("http://www.w3.org/2000/svg","circle");if(s.setAttribute("r",o.width.toString()),s.setAttribute("fill",e!=null?e:"grey"),s.setAttribute("stroke","black"),t.appendChild(s),(T=o.data)!=null&&T.name){const r=document.createElementNS("http://www.w3.org/2000/svg","text");r.textContent=o.data.name,r.setAttribute("text-anchor","middle"),r.setAttribute("alignment-baseline","middle"),r.setAttribute("fill",i!=null?i:"black"),r.setAttribute("font-size","8px"),t.appendChild(r)}t.addEventListener("pointerdown",r=>{r.preventDefault(),t.setPointerCapture(r.pointerId);const n=h=>{const m=new c(h.movementX,h.movementY);o.position=o.position.add(m),u.copyPositions(f)},a=()=>{window.removeEventListener("pointermove",n),window.removeEventListener("pointerup",a),t.releasePointerCapture(r.pointerId)};window.addEventListener("pointermove",n),window.addEventListener("pointerup",a),u.setFocusedNode(o)}),p.appendChild(t)}p.addEventListener("dblclick",()=>{u.setFocusedNode(null)});$.appendChild(p);const P=25;let A=!1;setInterval(async()=>{if(A)return;A=!0;const o=performance.now();u.step(f),f.nodes.forEach(t=>{const e=document.querySelector(`g[data-id="${t.id}"]`);e&&e.setAttribute("transform",`translate(${t.x}, ${t.y})`)}),f.edges.forEach(t=>{let e=null;if(f.edges.find(n=>n.source===t.destination&&n.destination===t.source)?e=document.querySelector(`line[data-source="${t.destination.id}"][data-destination="${t.source.id}"]`):e=document.querySelector(`line[data-source="${t.source.id}"][data-destination="${t.destination.id}"]`),e){const{start:n,end:a}=W(t);e.setAttribute("x1",n.x.toString()),e.setAttribute("y1",n.y.toString()),e.setAttribute("x2",a.x.toString()),e.setAttribute("y2",a.y.toString())}const s=u.focusedNode;s&&(s.id===t.source.id||s.id===t.destination.id?(e==null||e.setAttribute("stroke",y),e==null||e.setAttribute("fill",y),e!=null&&e.hasAttribute("marker-start")&&(e==null||e.setAttribute("marker-start","url(#arrowstartactive)")),e!=null&&e.hasAttribute("marker-end")&&(e==null||e.setAttribute("marker-end","url(#arrowendactive)"))):(e==null||e.setAttribute("stroke","lightgray"),e==null||e.setAttribute("fill","lightgray"),e!=null&&e.hasAttribute("marker-start")&&(e==null||e.setAttribute("marker-start","url(#arrowend)")),e!=null&&e.hasAttribute("marker-end")&&(e==null||e.setAttribute("marker-end","url(#arrowend)"))));const r=performance.now()-o;r>P&&console.warn(`Tick took ${r}ms`),u.copyPositions(f),A=!1})},P);function W(o){const t=o.source,e=o.destination;let i=t.x,s=t.y,r=e.x,n=e.y;const a=Math.atan2(n-s,r-i);return i+=Math.cos(a)*t.width,s+=Math.sin(a)*t.height,r-=Math.cos(a)*e.width,n-=Math.sin(a)*e.height,{start:new c(i,s),end:new c(r,n)}}
