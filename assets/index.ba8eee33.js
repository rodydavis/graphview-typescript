(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function e(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerpolicy&&(n.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?n.credentials="include":s.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(s){if(s.ep)return;s.ep=!0;const n=e(s);fetch(s.href,n)}})();class b{nextDouble(){return Math.random()}}class M{constructor(){this.graphHeight=500,this.graphWidth=500,this.random=new b,this.focusedNode=null}setDimensions(t,e){this.graphWidth=t,this.graphHeight=e}setFocusedNode(t){this.focusedNode=t}}const A=1e3,N=.5,S=.4,v=.15,R=.15,E=15,f=1e-4,x=100;class h{constructor(t,e){this.x=t,this.y=e}add(t){return new h(this.x+t.x,this.y+t.y)}subtract(t){return new h(this.x-t.x,this.y-t.y)}divide(t){return new h(this.x/t,this.y/t)}get distance(){return Math.sqrt(this.x*this.x+this.y*this.y)}limit(t){const e=this.distance;return e>t?this.divide(e).multiply(t):this}multiply(t){return new h(this.x*t,this.y*t)}}h.zero=new h(0,0);class c{constructor(t,e,i,s){this.x=t,this.y=e,this.width=i,this.height=s}static fromLTRB(t,e,i,s){return new c(t,e,i-t,s-e)}static fromSize(t){return new c(0,0,t.width,t.height)}static fromPoints(t,e){return c.fromLTRB(Math.min(t.x,e.x),Math.min(t.y,e.y),Math.max(t.x,e.x),Math.max(t.y,e.y))}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get size(){return{width:this.width,height:this.height}}translate(t,e){return new c(this.x+t,this.y+e,this.width,this.height)}}c.zero=new c(0,0,0,0);class P{constructor(){this.nodes=[],this.rect=c.zero}getNodes(){return this.nodes}getRect(){return this.rect}setRect(t){this.rect=t}add(t){this.nodes.push(t),this.nodes.length===1?this.rect=c.fromLTRB(t.x,t.y,t.x+t.width,t.y+t.height):this.rect=c.fromLTRB(Math.min(this.rect.left,t.x),Math.min(this.rect.top,t.y),Math.max(this.rect.right,t.x+t.width),Math.max(this.rect.bottom,t.y+t.height))}contains(t){return this.nodes.indexOf(t)!==-1}size(){return this.nodes.length}concat(t){t.nodes.forEach(e=>{e.position=new h(this.rect.right+E,this.rect.top),this.add(e)})}offset(t,e){this.nodes.forEach(i=>{i.position=i.position.add(new h(t,e))}),this.rect=this.rect.translate(t,e)}}class I extends M{constructor(){super(...arguments),this.displacement=new Map,this.tick=0,this.iterations=A,this.repulsionRate=N,this.attractionRate=v,this.repulsionPercentage=S,this.attractionPercentage=R}setProperties(t){t!=null&&t.iterations&&(this.iterations=t.iterations),t!=null&&t.repulsionRate&&(this.repulsionRate=t.repulsionRate),t!=null&&t.attractionRate&&(this.attractionRate=t.attractionRate),t!=null&&t.repulsionPercentage&&(this.repulsionPercentage=t.repulsionPercentage),t!=null&&t.attractionPercentage&&(this.attractionPercentage=t.attractionPercentage)}init(t){t.nodes.forEach(e=>{this.displacement.set(e,h.zero);const i=this.random.nextDouble()*this.graphWidth,s=this.random.nextDouble()*this.graphHeight;e.position=new h(i,s)})}step(t){this.displacement.clear(),t.nodes.forEach(e=>{this.displacement.set(e,h.zero)}),this.calculateRepulsion(t.nodes),this.calculateAttraction(t.edges),this.moveNodes(t)}moveNodes(t){t.nodes.forEach(e=>{const i=e.position.add(this.displacement.get(e)),s=Math.min(this.graphWidth-40,Math.max(0,i.x)),n=Math.min(this.graphHeight-40,Math.max(0,i.y));e.position=new h(s,n)})}cool(t){this.tick*=1-t/this.iterations}limitMaximumDisplacement(t){t.forEach(e=>{if(e!==this.focusedNode){debugger;const i=this.displacement.get(e),s=i.distance,n=Math.max(f,s),o=n*Math.min(n,this.tick),a=i.divide(o);e.position=e.position.add(a)}else this.displacement.set(e,h.zero)})}calculateAttraction(t){t.forEach(e=>{const i=e.source,s=e.destination,n=i.position.subtract(s.position),o=Math.max(f,n.distance),a=Math.min(this.graphWidth*this.attractionPercentage,this.graphHeight*this.attractionPercentage),d=Math.min(0,Math.abs(a-o)/(a*2)),p=n.multiply(d*this.attractionRate);this.displacement.set(i,this.displacement.get(i).subtract(p)),this.displacement.set(s,this.displacement.get(s).add(p))})}calculateRepulsion(t){t.forEach(e=>{t.forEach(i=>{if(e!==i){const s=e.position.subtract(i.position),n=Math.max(f,s.distance),o=Math.min(this.graphWidth*this.repulsionPercentage,this.graphHeight*this.repulsionPercentage),a=Math.max(0,o-n)/o,d=s.multiply(a*this.repulsionRate);this.displacement.set(e,this.displacement.get(e).add(d))}}),t.forEach(i=>{this.displacement.set(i,this.displacement.get(i).divide(t.length))})})}layout(t){const e=this.findBiggestSize(t)*t.nodes.length;this.graphWidth=e,this.graphHeight=e}run(t,e,i){this.layout(t);const s=t.nodes,n=t.edges;this.tick=.1*Math.sqrt(this.graphWidth/2*this.graphHeight/2),this.init(t);for(let o=0;o<this.iterations&&(this.calculateRepulsion(s),this.calculateAttraction(n),this.limitMaximumDisplacement(s),this.cool(o),!this.done());o++);return this.focusedNode===null&&this.positionNodes(t),this.shiftCoordinates(t,e,i),this.calculateGraphSize(t)}shiftCoordinates(t,e,i){t.nodes.forEach(s=>{s.position=s.position.add(new h(e,i))})}positionNodes(t){const e=this.getOffset(t),i=e.x,s=e.y,n=[],o=[];t.nodes.forEach(a=>{a.position=a.position.subtract(new h(i,s))}),t.nodes.forEach(a=>{if(!n.includes(a)){n.push(a);let d=this.findClusterOf(o,a);d===null&&(d=new P,d.add(a),o.push(d)),this.followEdges(t,d,a,n)}}),this.positionCluster(o)}positionCluster(t){this.combineSingleNodeCluster(t);let e=t[0];e.offset(-e.rect.left,-e.rect.top);for(let i=1;i<t.length;i++){const s=t[i],n=s.rect.left-e.rect.right-E,o=s.rect.top-e.rect.top;s.offset(-n,-o),e=s}}combineSingleNodeCluster(t){let e=null;t.forEach(i=>{i.size()===1&&(e===null?e=i:e.concat(i))}),t.forEach(i=>{i.size()===1&&t.splice(t.indexOf(i),1)})}followEdges(t,e,i,s){t.successorsOf(i).forEach(n=>{s.includes(n)||(s.push(n),e.add(n),this.followEdges(t,e,n,s))}),t.predecessorsOf(i).forEach(n=>{s.includes(n)||(s.push(n),e.add(n),this.followEdges(t,e,n,s))})}findClusterOf(t,e){for(const i of t)if(i.contains(e))return i;return null}findBiggestSize(t){return t.nodes.map(e=>Math.max(e.height,e.width)).reduce((e,i)=>Math.max(e,i),0)}getOffset(t){let e=1/0,i=1/0;return t.nodes.forEach(s=>{e=Math.min(e,s.position.x),i=Math.min(i,s.position.y)}),new h(e,i)}done(){return this.tick<1/Math.max(this.graphWidth,this.graphHeight)}calculateGraphSize(t){let e=1/0,i=1/0,s=-1/0,n=-1/0;return t.nodes.forEach(o=>{e=Math.min(e,o.position.x),i=Math.min(i,o.position.y),s=Math.max(s,o.position.x+o.width),n=Math.max(n,o.position.y+o.height)}),{width:s-e,height:n-i}}}class O{constructor(t){this.position=h.zero,this.width=x,this.height=x,this.id=t}get x(){return this.position.x}get y(){return this.position.y}}class m{constructor(t,e){this.nodes=t,this.edges=e}static fromJson(t){const e=t.nodes.map(s=>{var n;const o=new O(s.id);if(!((n=t.properties)===null||n===void 0)&&n.defaultNodeSize){const a=Number(t.properties.defaultNodeSize);o.width=o.height=a}return o}),i=t.edges.map(s=>({source:e.find(n=>n.id===s.source),destination:e.find(n=>n.id===s.destination)}));return new m(e,i)}toJson(){return{nodes:this.nodes.map(t=>({id:t.id})),edges:this.edges.map(t=>({source:t.source.id,destination:t.destination.id}))}}successorsOf(t){return this.getOutEdges(t).map(e=>e.destination)}getOutEdges(t){return this.edges.filter(e=>e.source===t)}predecessorsOf(t){return this.getInEdges(t).map(e=>e.source)}getInEdges(t){return this.edges.filter(e=>e.destination===t)}getEdgeBetween(t,e){return this.edges.find(i=>i.source===t&&i.destination===e)}hasNodes(){return this.nodes.length>0}}const z={nodes:[{id:"1"},{id:"2"},{id:"3"},{id:"4"},{id:"5"}],edges:[{source:"1",destination:"2"},{source:"1",destination:"3"},{source:"2",destination:"4"},{source:"2",destination:"5"},{source:"3",destination:"4"},{source:"3",destination:"5"}]},l=m.fromJson(z),g=new I;var y;const D=(y=document.getElementById("output"))!=null?y:document.body;g.layout(l);g.init(l);const u=document.createElementNS("http://www.w3.org/2000/svg","svg");u.setAttribute("width","100%");u.setAttribute("height","100%");u.setAttribute("viewBox",`0 0 ${g.graphWidth} ${g.graphHeight}`);u.setAttribute("preserveAspectRatio","xMidYMid meet");for(const r of l.edges){const t=document.createElementNS("http://www.w3.org/2000/svg","line");t.setAttribute("x1",r.source.x.toString()),t.setAttribute("y1",r.source.y.toString()),t.setAttribute("x2",r.destination.x.toString()),t.setAttribute("y2",r.destination.y.toString()),t.setAttribute("stroke","black"),t.setAttribute("data-source",r.source.id),t.setAttribute("data-destination",r.destination.id),u.appendChild(t)}var w;for(const r of l.nodes){const t=document.createElementNS("http://www.w3.org/2000/svg","circle");t.setAttribute("cx",r.x.toString()),t.setAttribute("cy",r.y.toString()),t.setAttribute("r","10"),t.setAttribute("fill","grey"),t.setAttribute("data-id",r.id),u.appendChild(t);const e=document.createElementNS("http://www.w3.org/2000/svg","title");e.textContent=(w=r.name)!=null?w:r.id,t.appendChild(e)}D.appendChild(u);const T=25;setInterval(()=>{g.step(l),l.nodes.forEach(r=>{const t=document.querySelector(`circle[data-id="${r.id}"]`);t&&(t.setAttribute("cx",r.x.toString()),t.setAttribute("cy",r.y.toString()))}),l.edges.forEach(r=>{const t=document.querySelector(`line[data-source="${r.source.id}"][data-destination="${r.destination.id}"]`);t&&(t.setAttribute("x1",r.source.x.toString()),t.setAttribute("y1",r.source.y.toString()),t.setAttribute("x2",r.destination.x.toString()),t.setAttribute("y2",r.destination.y.toString()))})},T);
